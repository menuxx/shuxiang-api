/*
 * This file is generated by jOOQ.
*/
package com.menuxx.common.db.tables;


import com.menuxx.common.db.Keys;
import com.menuxx.common.db.Onecode;
import com.menuxx.common.db.tables.records.TAuthorityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAuthority extends TableImpl<TAuthorityRecord> {

    private static final long serialVersionUID = 1500220017;

    /**
     * The reference instance of <code>onecode.t_authority</code>
     */
    public static final TAuthority T_AUTHORITY = new TAuthority();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TAuthorityRecord> getRecordType() {
        return TAuthorityRecord.class;
    }

    /**
     * The column <code>onecode.t_authority.id</code>.
     */
    public final TableField<TAuthorityRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>onecode.t_authority.name</code>. 角色名称
     */
    public final TableField<TAuthorityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "角色名称");

    /**
     * Create a <code>onecode.t_authority</code> table reference
     */
    public TAuthority() {
        this("t_authority", null);
    }

    /**
     * Create an aliased <code>onecode.t_authority</code> table reference
     */
    public TAuthority(String alias) {
        this(alias, T_AUTHORITY);
    }

    private TAuthority(String alias, Table<TAuthorityRecord> aliased) {
        this(alias, aliased, null);
    }

    private TAuthority(String alias, Table<TAuthorityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Onecode.ONECODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TAuthorityRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_AUTHORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TAuthorityRecord> getPrimaryKey() {
        return Keys.KEY_T_AUTHORITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TAuthorityRecord>> getKeys() {
        return Arrays.<UniqueKey<TAuthorityRecord>>asList(Keys.KEY_T_AUTHORITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAuthority as(String alias) {
        return new TAuthority(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TAuthority rename(String name) {
        return new TAuthority(name, null);
    }
}
